{"version":3,"sources":["index.js"],"names":["M","AutoInit","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","analytics","database","firestore","username","document","getElementById","password","addEventListener","prijava","registracija","collection","where","value","get","then","querySnapshot","forEach","doc","podaci","data","console","log","alert","vecZauzeto","add","cijena"],"mappings":"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","file":"projekt, 20.2.e31bb0bc.js","sourceRoot":"..","sourcesContent":["M.AutoInit();\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCijigrea2HComQB4UawQG5yiu_dbCoNOw\",\r\n    authDomain: \"oglasnik-31138.firebaseapp.com\",\r\n    projectId: \"oglasnik-31138\",\r\n    storageBucket: \"oglasnik-31138.appspot.com\",\r\n    messagingSenderId: \"320490630753\",\r\n    appId: \"1:320490630753:web:a1940d904278416a37c420\",\r\n    measurementId: \"G-NYX4WNMZVN\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n\r\nlet database = firebase.firestore();\r\nlet username=document.getElementById(\"username\")\r\nlet password=document.getElementById(\"password\")\r\n\r\ndocument.getElementById(\"prijava\").addEventListener(\"click\", ()=>prijava())\r\ndocument.getElementById(\"registracija\").addEventListener(\"click\", ()=>registracija())\r\n\r\nfunction prijava(){\r\n    let prijava=false //gleda da li se korisnik uspio prijaviti tj. da li je ispravno i username i password\r\n    database.collection(\"korisnici\").where(\"username\", \"==\", username.value).get().then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          let podaci = doc.data();\r\n          console.log(podaci)\r\n          if(podaci.password==password.value){\r\n              alert(\"yey\")\r\n              prijava=true //korisnik se prijavio\r\n          }\r\n        });\r\n        prijava==false ? console.log(\"Netocno korisnicko ime ili lozinka\") : false; //korisnik se nije prijavio\r\n      });\r\n    \r\n}\r\n\r\nfunction registracija(){\r\n    let vecZauzeto=false //provjerava je li username vez zauzet\r\n    database.collection(\"korisnici\").get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            doc.data().username==username.value? vecZauzeto=true : false;\r\n        });\r\n        if(vecZauzeto== true){\r\n            console.log(\"Korisnicko ime koje ste upisali je već zauzeto\")\r\n        } else{\r\n            database.collection(\"korisnici\").add({\r\n                username: username.value,\r\n                password: password.value,\r\n                })\r\n            console.log(`${username.value}, uspješno ste se registrirali `)\r\n        }\r\n        });\r\n        \r\n}\r\ndatabase.collection(\"oglasi\").where(\"type\", \"==\", \"matematika\").get().then(function (querySnapshot) {\r\n  querySnapshot.forEach(function (doc) {\r\n    let podaci = doc.data();\r\n    console.log(podaci.cijena)\r\n  });\r\n});"]}